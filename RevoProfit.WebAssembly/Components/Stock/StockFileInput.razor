@inject IStockCsvService CsvService
@inject IStockTransactionService StockTransactionService
@inject ILogger<StockFileInput> Logger
@inject AppState AppState
@inject IStringLocalizer<Localization> Loc

<div class="mb-3">
    <label class="form-label">@Loc[nameof(Localization.RevolutFile)]</label>
    <InputFile class="form-control" OnChange="@LoadFiles" required />
</div>
<button class="btn btn-primary btn-lg" @onclick="SeeResults">
    @Loc[nameof(Localization.SeeResults)]
    @if (AppState.IsCalculatingStock)
    {
        <span class="spinner-border spinner-border-sm ms-2" role="status" aria-hidden="true"></span>
    }
</button>
@if (ErrorMessage != null)
{
    <div class="alert alert-danger mt-3" role="alert">
        @ErrorMessage
    </div>
}

@code {
    public Stream? CsvFileStream { get; set; }
    public string? ErrorMessage { get; set; }

    private void LoadFiles(InputFileChangeEventArgs e)
    {
        ErrorMessage = null;
        try
        {
            CsvFileStream = e.File.OpenReadStream(2_048_000);
        }
        catch (Exception exception)
        {
            ErrorMessage = Loc[nameof(Localization.GeneralErrorMessage)];
            Logger.LogError(exception, Loc[nameof(Localization.GeneralErrorMessage)]);
        }
    }

    private async Task SeeResults()
    {
        if (CsvFileStream == null) return;
        AppState.IsCalculatingStock = true;
        ErrorMessage = null;

        try
        {
            var transactions = await CsvService.ReadCsv(CsvFileStream);
            var (annualReports, _) = StockTransactionService.GetAnnualReports(transactions);
            Logger.LogInformation(LogEvents.GenerateAnnualReports, "Generate annual reports");
            AppState.AnnualReports = annualReports;
        }
        catch (Exception exception)
        {
            ErrorMessage = Loc[nameof(Localization.GeneralErrorMessage)];
            Logger.LogError(exception, Loc[nameof(Localization.GeneralErrorMessage)]);
        }
        finally
        {
            AppState.IsCalculatingStock = false;
            CsvFileStream = null;
        }
    }
}
