<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountStatement" xml:space="preserve">
    <value>Account Statement</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Answer1" xml:space="preserve">
    <value>We are using the Average Cost Basis Method. This is the method required by the French government for realized gains calculation.</value>
  </data>
  <data name="Answer2" xml:space="preserve">
    <value>No, we do not store any personal data, trading data, and do not use cookies.</value>
  </data>
  <data name="Answer3" xml:space="preserve">
    <value>Open your Revolut app and go to the "Stocks" section. Click on the "..." button and select "Statement" &gt; "Account Statement". Choose the Excel format, and choose the dates from June 2017 to {0}.</value>
  </data>
  <data name="BuyMeACoffee" xml:space="preserve">
    <value>☕ Buy me a coffee</value>
  </data>
  <data name="CashTopUp" xml:space="preserve">
    <value>Cash Top Up</value>
  </data>
  <data name="CryptoFile" xml:space="preserve">
    <value>Your Waltio Account Statement export file (.csv)</value>
  </data>
  <data name="CustodyFee" xml:space="preserve">
    <value>Custody Fee</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Disclaimer" xml:space="preserve">
    <value>RevoProfit is not affiliated or associated any way with Revolut™ Ltd. The realized gain calculation is based on the Average Cost methodology. You should consult an accountant to validate the results and make sure they comply with your local tax authority rules.</value>
  </data>
  <data name="Dividends" xml:space="preserve">
    <value>Dividends</value>
  </data>
  <data name="DonateBelow" xml:space="preserve">
    <value>Did I save you time? You can thank me by donating below.</value>
  </data>
  <data name="Gains" xml:space="preserve">
    <value>Gains</value>
  </data>
  <data name="ProfitAndLossStatement" xml:space="preserve">
    <value>Profit &amp; Loss statement</value>
  </data>
  <data name="Question1" xml:space="preserve">
    <value>How do we calculate realized gains?</value>
  </data>
  <data name="Question2" xml:space="preserve">
    <value>Do you store my trading data?</value>
  </data>
  <data name="Question3" xml:space="preserve">
    <value>How can I get my Revolut report in .csv format?</value>
  </data>
  <data name="ResultsIn" xml:space="preserve">
    <value>Results in {0}</value>
  </data>
  <data name="RevolutFile" xml:space="preserve">
    <value>Your Revolut Account Statement export file (.csv)</value>
  </data>
  <data name="SeeResults" xml:space="preserve">
    <value>💸 See Results</value>
  </data>
  <data name="SellOrderDetails" xml:space="preserve">
    <value>💰 Sell Order Details</value>
  </data>
  <data name="RevoProfitSubtitle" xml:space="preserve">
    <value>Calculate you trading gains or loss on your Revolut Stocks trading account.</value>
  </data>
  <data name="Ticker" xml:space="preserve">
    <value>Ticker</value>
  </data>
  <data name="WaltProfit" xml:space="preserve">
    <value>WaltProfit</value>
  </data>
  <data name="WaltProfitSubtitle" xml:space="preserve">
    <value>Calculate you crypto gains or loss from your waltio.co export.</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="AmountInEuros" xml:space="preserve">
    <value>Amout in €</value>
  </data>
  <data name="CryptoSymbol" xml:space="preserve">
    <value>Jeton</value>
  </data>
  <data name="Fees" xml:space="preserve">
    <value>Fees</value>
  </data>
  <data name="GainsInEuros" xml:space="preserve">
    <value>Gains in €</value>
  </data>
  <data name="RevoProfit" xml:space="preserve">
    <value>RevoProfit</value>
  </data>
  <data name="CryptoLefts" xml:space="preserve">
    <value>🪙 Crypto Lefts</value>
  </data>
  <data name="CashWithdrawal" xml:space="preserve">
    <value>Cash Withdrawal</value>
  </data>
  <data name="GeneralErrorMessage" xml:space="preserve">
    <value>Something went wrong while reading the csv</value>
  </data>
  <data name="AveragePrice" xml:space="preserve">
    <value>Average stock price</value>
  </data>
  <data name="AmountInDollars" xml:space="preserve">
    <value>Amount inserted</value>
  </data>
  <data name="StockLefts" xml:space="preserve">
    <value>🚀 Stock Lefts</value>
  </data>
</root>